{"version":3,"sources":["API/apiKeys.js","Images/WeatherIcons.gif","Images/bhavesh.jpeg","Images/kovid.jpeg","Images/rajat.jpeg","Images/shobhit.jpeg","Components/Navigation.js","Components/Team.js","Components/Forecast.js","API/firebase.js","Components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","key","base","withRouter","props","Navbar","expand","fixed","Container","Brand","href","location","pathname","style","color","alt","src","process","width","height","className","Nav","Link","font","Team","Row","Col","sm","lg","require","target","rel","icon","size","faEnvelope","Forecast","days","defaults","animate","text","weather","id","Math","round","live_data","Temperature","Altitude","Humidity","Pressure","day","forecast","max","min","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Weather","state","errorMessage","undefined","temperatureC","temperatureF","city","country","humidity","description","sunrise","sunset","errorMsg","live","a","database","ref","on","snapshot","val","setState","errorObject","console","log","getPosition","options","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","lat","lon","fetch","apiKeys","api_call","json","data","name","main","sys","this","then","position","coords","latitude","longitude","catch","err","alert","timerID","setInterval","clearInterval","Fragment","format","interval","ticking","timezone","onChange","output","d","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","loader","WebkitUserDrag","fontSize","fontWeight","marginTop","React","Component","library","add","fab","App","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.621c381a.chunk.js","sourcesContent":["// Visit https://api.openweathermap.org & then signup to get our API keys for free\nmodule.exports = {\n  key: \"f09654878951fc2e5baf0c52946c1d61\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n","module.exports = __webpack_public_path__ + \"static/media/WeatherIcons.0a218296.gif\";","module.exports = __webpack_public_path__ + \"static/media/bhavesh.613d7946.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/kovid.0963f620.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/rajat.f29fdb04.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shobhit.9d8956e9.jpeg\";","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from 'react-bootstrap';\n\nfunction Navigation(props) {\n\n  return (\n  <Navbar expand=\"md\" fixed=\"sticky\">\n  <Container>\n  <Navbar.Brand  href={props.location.pathname !== \"/\" ? \"#/\" :\"#/\"} style={{color:\"white\"}}>\n        <img\n          alt=\"\"\n          src={process.env.PUBLIC_URL + \"/logo192.png\"}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top\"\n        />{' '}\n      intelliMausasm\n      </Navbar.Brand>\n      <Nav className=\"ml-auto\">\n        <Nav.Link href={props.location.pathname === \"/about\" ? \"#/\" : \"#/about\"} style={ {color: `${\n                  props.location.pathname === \"/about\" ? \"white\" : \"#d3d3d3\"\n                }`, font: \"inherit\"}}>\n                {props.location.pathname === \"/about\" ? \"Go Back\" : \"About Us\"}\n        </Nav.Link>\n        </Nav>\n  </Container>\n</Navbar>  \n  );\n}\n\nexport default withRouter(Navigation);","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\nfunction Team(props){\n    return(\n        <div className=\"team\">\n\t\t<h1>Meet Group-28</h1>\n\t\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col sm={6} lg={3}  >\n\t\t\t\t\t<div className=\"member\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src= {require(\"../Images/bhavesh.jpeg\")} alt=\"avatar\"/>\n\t\t\t\t\t\t\t<h3>Bhavesh Suneja</h3>\n\t\t\t\t\t\t\t<h4>IoT Developer</h4>\n\t\t\t\t\t\t\t<p>BTCSE-D<br/>180102203<br/>1000010693<br/></p>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"https://github.com/EliteWarrior315/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"team-icon\" size=\"2x\" color=\"white\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/bhaveshsuneja/\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'linkedin']} className=\"team-icon\" size=\"2x\" color=\"#0e76a8\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://twitter.com/bhavesh_suneja/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'twitter']}  className=\"team-icon\" size=\"2x\" color=\"#1da1f2\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} lg={3}  >\n\t\t\t\t\t<div className=\"member\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src= {require(\"../Images/kovid.jpeg\")} alt=\"avatar\"/>\n\t\t\t\t\t\t\t<h3>Kovid Sharma</h3>\n\t\t\t\t\t\t\t<h4>ML Engineer</h4>\n\t\t\t\t\t\t\t<p>BTCSE-D<br/>180102253<br/>1000011512<br/></p>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"https://github.com/kovid112m/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"team-icon\" size=\"2x\" color=\"white\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/kovidsharma112/\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'linkedin']} className=\"team-icon\" size=\"2x\" color=\"#0e76a8\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"mailto:kovidsharma1862000@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \t\t\t\t\t\t<FontAwesomeIcon icon={faEnvelope}  className=\"team-icon\" size=\"2x\" color=\"#ffa700\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} lg={3}  >\n\t\t\t\t\t<div className=\"member\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src= {require(\"../Images/rajat.jpeg\")} alt=\"avatar\"/>\n\t\t\t\t\t\t\t<h3>Rajat Semwal</h3>\n\t\t\t\t\t\t\t<h4>Backend Developer</h4>\n\t\t\t\t\t\t\t<p>BTCSE-D<br/>180102233<br/>1000010732<br/></p>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"https://github.com/rajatsemwal/\"target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"team-icon\" size=\"2x\" color=\"white\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/rajatsemwal/\"target=\"_blank\" rel=\"noopener noreferrer\">\n    \t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'linkedin']} className=\"team-icon\" size=\"2x\" color=\"#0e76a8\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://instagram.com/skadoosh.03/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'instagram']} className=\"team-icon\" size=\"2x\" color=\"#C13584\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={6} lg={3}  >\n\t\t\t\t\t<div className=\"member\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src= {require(\"../Images/shobhit.jpeg\")} alt=\"avatar\"/>\n\t\t\t\t\t\t\t<h3>Shobhit Jain</h3>\n\t\t\t\t\t\t\t<h4>Frontend Developer</h4>\n\t\t\t\t\t\t\t<p>BTCSE-D<br/>180102220<br/>1000010546<br/></p>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<a href=\"https://github.com/Shobhitjain123/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'github']} className=\"team-icon\" size=\"2x\" color=\"white\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://www.linkedin.com/in/shobhit-jain-530a42174//\" target=\"_blank\" rel=\"noopener noreferrer\">\n    \t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'linkedin']} className=\"team-icon\" size=\"2x\" color=\"#0e76a8\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<a href=\"https://www.facebook.com/shobhit.jain.716/\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={['fab', 'facebook']} className=\"team-icon\" size=\"2x\" color=\"#4267B2\"/>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h1>About intelliMausam</h1>\n\t\t\t\t\t<div className=\"project-about\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>intelliMausam is an AIoT based weather station developed as a major project for the fulfilment of Bachelor of Technology Degree in Computer Science and Engineering. A weather station is described as an instrument or device, which provides us with information about the weather in our neighbouring environment.</div>\n\n\t\t\t\t\t\t<div>Integrating modern technologies of IoT and Artificial Intelligence allowed us to develop an affordable and portable weather station that, not only follows Industry 4.0 standards but also has more potential than a traditional Weather Station.</div>\n\n\t\t\t\t\t\t<div>intelliMausam studies various environmental parameters, generates a weather forecast and displays the current weather conditions and the forecast on this website. Instead of displaying, the data can be sent as telemetry to various platforms or devices, where connected actuators can perform various actions as per the user's requirements.</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t</Container>\n        </div>\n    )\n}\n\nexport default Team;","import React from \"react\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forecast(props) {\n\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true,\n  };\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={props.icon}\n          color={defaults.color}\n          size={defaults.size}\n          animate={defaults.animate}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{props.text}</h3>\n\n        <ul>\n          {typeof props.weather != \"undefined\" ? (\n            <div>\n              {\" \"}\n              \n              <li id=\"small-temp\">\n              Temperature{\" \"}\n                <span className=\"temp\">\n                  {Math.round(props.weather.live_data.Temperature)}&deg; C\n                </span>\n              </li>\n              <li>\n              Altitude{\" \"}\n                <span className=\"temp\">\n                  {Math.round(props.weather.live_data.Altitude)} m\n                </span>\n              </li>\n              <li>\n                Humidity{\" \"}\n                <span className=\"temp\">\n                  {Math.round(props.weather.live_data.Humidity)} %\n                </span>\n              </li>\n              <li>\n                Pressure{\" \"}\n                <span className=\"temp\">\n                  {Math.round(props.weather.live_data.Pressure)} hPa\n                </span>\n              </li>\n            </div>\n          ) : (\n            <h1>\n               There seems to be an issue with your connection.\n            </h1>\n          )}\n        </ul>\n        <h4>5-Day Forecast</h4>\n        <div className=\"search-box\">\n          <span style={{color: \"White\"}}>{days[(props.day+1)%7]}  :</span>\n          <div className=\"img-box\">\n            <span>{props.weather.forecast[`${'Day'+1}`].max}° / {props.weather.forecast[`${'Day'+1}`].min}° C</span>\n          </div>\n        </div>\n        <div className=\"search-box\">\n          <span style={{color: \"White\"}}>{days[(props.day+2)%7]}  :</span>\n          <div className=\"img-box\">\n            <span>{props.weather.forecast[`${'Day'+2}`].max}° / {props.weather.forecast[`${'Day'+2}`].min}° C</span>\n          </div>\n        </div>\n        <div className=\"search-box\">\n          <span style={{color: \"White\"}}>{days[(props.day+3)%7]}  :</span>\n          <div className=\"img-box\">\n            <span>{props.weather.forecast[`${'Day'+3}`].max}° / {props.weather.forecast[`${'Day'+3}`].min}° C</span>\n          </div>\n        </div>\n\n        <div className=\"search-box\">\n          <span style={{color: \"White\"}}>{days[(props.day+4)%7]}  :</span>\n          <div className=\"img-box\">\n            <span>{props.weather.forecast[`${'Day'+4}`].max}° / {props.weather.forecast[`${'Day'+4}`].min}° C</span>\n          </div>\n        </div>\n\n        <div className=\"search-box\">\n          <span style={{color: \"White\"}}>{days[(props.day+5)%7]} :</span>\n          <div className=\"img-box\">\n            <span>{props.weather.forecast[`${'Day'+5}`].max}° / {props.weather.forecast[`${'Day'+5}`].min}° C</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Forecast;\n","import firebase from 'firebase/app'\nimport 'firebase/database'\n\n// initialize database\n\nconst config = {\n    apiKey: \"AIzaSyC0owQHGy0XyH8_lEKDkA0JAND6hMh5Wjw\",\n  authDomain: \"intellimausam-2e6fa.firebaseapp.com\",\n  databaseURL: \"https://intellimausam-2e6fa-default-rtdb.asia-southeast1.firebasedatabase.app\",\n  projectId: \"intellimausam-2e6fa\",\n  storageBucket: \"intellimausam-2e6fa.appspot.com\",\n  messagingSenderId: \"593089873345\",\n  appId: \"1:593089873345:web:a42bcb2e9b769eae9a9b40\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React from \"react\";\nimport apiKeys from \"../API/apiKeys\";\nimport Clock from \"react-live-clock\";\nimport Forecast from \"./Forecast\";\nimport loader from \"../Images/WeatherIcons.gif\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport firebase from \"../API/firebase\";\n\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day}, ${date} ${month} ${year}`;\n};\nconst defaults = {\n  color: \"white\",\n  size: 112,\n  animate: true,\n};\nclass Weather extends React.Component {\n  state = {\n    errorMessage: undefined,\n    temperatureC: undefined,\n    temperatureF: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: \"CLEAR_DAY\",\n    sunrise: undefined,\n    sunset: undefined,\n    errorMsg: undefined,\n  };\n\n  componentDidMount() {\n    if(this.state.lat===undefined && this.state.lon===undefined){\n      if (navigator.geolocation) {\n        this.getPosition()\n          //If user allow location service then will fetch data & send it to get-weather function.\n          .then((position) => {\n            this.getWeather(position.coords.latitude, position.coords.longitude);\n          })\n          .catch((err) => {\n            //If user denied location service then standard location weather will le shown on basis of latitude & latitude.\n            this.getWeather(28.67, 77.22);\n            alert(\n              \"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real time weather.\"\n            );\n          });\n      } else {\n        alert(\"Geolocation not available\");\n      }\n    } else {\n      \n    }    \n\n      this.timerID = setInterval(\n        () => this.getWeather(this.state.lat, this.state.lon),\n        600000\n      );\n  }\n\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  live = async () => {\n    const liveref = firebase.database().ref();\n     liveref.on('value', (snapshot) => {\n       let weather = snapshot.val();\n       this.setState({\n        temperatureC: Math.round(weather.live_data.Temperature),\n        temperatureF: Math.round(weather.live_data.Temperature * 1.8 + 32),\n        weather: weather\n       })\n    }, (errorObject) => {\n      console.log('The read failed: ' + errorObject);\n    });\n    \n  }\n\n  getPosition = (options) => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject, options);\n    });\n  };\n  getWeather = async (lat, lon) => {\n    const api_call = await fetch(\n      `${apiKeys.base}weather?lat=${lat}&lon=${lon}&units=metric&APPID=${apiKeys.key}`\n    );\n    const data = await api_call.json();\n    \n    this.live();\n    console.log(\"hello ji\");\n    this.setState({\n      lat: lat,\n      lon: lon,\n      city: data.name,\n      main: data.weather[0].main,\n      country: data.sys.country,\n    });\n    switch (this.state.main) {\n      case \"Haze\":\n        this.setState({ icon: \"CLEAR_DAY\" });\n        break;\n      case \"Clouds\":\n        this.setState({ icon: \"CLOUDY\" });\n        break;\n      case \"Rain\":\n        this.setState({ icon: \"RAIN\" });\n        break;\n      case \"Snow\":\n        this.setState({ icon: \"SNOW\" });\n        break;\n      case \"Dust\":\n        this.setState({ icon: \"WIND\" });\n        break;\n      case \"Drizzle\":\n        this.setState({ icon: \"SLEET\" });\n        break;\n      case \"Fog\":\n        this.setState({ icon: \"FOG\" });\n        break;\n      case \"Smoke\":\n        this.setState({ icon: \"FOG\" });\n        break;\n      case \"Tornado\":\n        this.setState({ icon: \"WIND\" });\n        break;\n      default:\n        this.setState({ icon: \"CLEAR_DAY\" });\n    }\n  };\n\n  render() {\n    \n    if (this.state.temperatureC) {\n      return (\n        <React.Fragment>\n          <div className=\"city\">\n            <div className=\"title\">\n              <h2>{this.state.city}</h2>\n              <h3>{this.state.country}</h3>\n            </div>\n            <div className=\"mb-icon\">\n              {\" \"}\n              <ReactAnimatedWeather\n                icon={this.state.icon}\n                color={defaults.color}\n                size={defaults.size}\n                animate={defaults.animate}\n              />\n              <p>{this.state.main}</p>\n            </div>\n            <div className=\"date-time\">\n              <div className=\"dmy\">\n                <div id=\"txt\"></div>\n                <div className=\"current-time\">\n                  <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} timezone={'Asia/Kolkata'} onChange={({output}) => {if(output===\"23:59:59\")this.setState({day: \"updated\"})}}/>\n                </div>\n                <div className=\"current-date\">{dateBuilder(new Date())}</div>\n              </div>\n              <div className=\"temperature\" id=\"big-temp\">\n                <p>\n                  {this.state.temperatureC}°<span>C</span>\n                </p>\n              </div>\n            </div>\n          </div>\n          <Forecast icon={this.state.icon} text={this.state.main} weather={this.state.weather} day={new Date().getDay()}  />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <img src={loader} style={{ width: \"50%\", WebkitUserDrag: \"none\" }} alt=\"Loader GIF\"/>\n          <h3 style={{ color: \"white\", fontSize: \"22px\", fontWeight: \"600\" }}>\n            Detecting your location\n          </h3>\n          <h3 style={{ color: \"white\", marginTop: \"10px\" }}>\n            Your current location will be displayed on the App <br></br> & used\n            for calculating Realtime weather conditions.\n          </h3>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Navigation from './Components/Navigation';\r\nimport Team from './Components/Team'\r\nimport Weather from \"./Components/Weather\";\r\nimport \"./App.css\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"\r\n\r\nlibrary.add(fab);\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/about\" component={() => <Team />} />    \r\n          <Route path=\"/\" component={() => <div className=\"container1\"><Weather /></div>} />\r\n          {/* <Redirect from='*' to='/' /> */}\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nconsole.log(\"Hum aa gaye\")\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}